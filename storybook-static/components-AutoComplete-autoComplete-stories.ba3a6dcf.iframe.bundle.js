"use strict";(self.webpackChunkyinyin_ui_ts=self.webpackChunkyinyin_ui_ts||[]).push([[397],{"./src/components/AutoComplete/autoComplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasedOnInput:()=>BasedOnInput,GetDataSync:()=>GetDataSync,GetDataWithTemplate:()=>GetDataWithTemplate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>autoComplete_stories});var react=__webpack_require__("../yinyintest/node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),input1=__webpack_require__("./src/components/Input/input.tsx"),icon1=__webpack_require__("./src/components/Icon/icon.tsx"),CSSTransition=__webpack_require__("./node_modules/react-transition-group/esm/CSSTransition.js"),jsx_runtime=__webpack_require__("../yinyintest/node_modules/react/jsx-runtime.js");let Transition=props=>{let{children,classNames,animation,wrapper,...restProps}=props;return(0,jsx_runtime.jsx)(CSSTransition.A,{classNames:classNames||animation,...restProps,children:wrapper?(0,jsx_runtime.jsx)("div",{children:children}):children})};Transition.defaultProps={unmountOnExit:!0,appear:!0};try{transition.displayName="transition",transition.__docgenInfo={description:"",displayName:"transition",props:{classNames:{defaultValue:null,description:"The animation `classNames` applied to the component as it enters or exits.\nA single name can be provided and it will be suffixed for each stage: e.g.\n\n`classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n`fade-exit`, `fade-exit-active`, `fade-appear`, and `fade-appear-active`.\n\nEach individual classNames can also be specified independently like:\n\n```js\nclassNames={{\n  appear: 'my-appear',\n  appearActive: 'my-appear-active',\n  appearDone: 'my-appear-done',\n  enter: 'my-enter',\n  enterActive: 'my-enter-active',\n  enterDone: 'my-enter-done',\n  exit: 'my-exit',\n  exitActive: 'my-exit-active',\n  exitDone: 'my-exit-done'\n}}\n```",name:"classNames",required:!1,type:{name:"string | CSSTransitionClassNames"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"enum",value:[{value:'"zoom-in-top"'},{value:'"zoom-in-left"'},{value:'"zoom-in-bottom"'},{value:'"zoom-in-right"'}]}},wrapper:{defaultValue:null,description:"",name:"wrapper",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Transition/transition.tsx#transition"]={docgenInfo:transition.__docgenInfo,name:"transition",path:"src/components/Transition/transition.tsx#transition"})}catch(__react_docgen_typescript_loader_error){}let hooks_useDebounce=function useDebounce(value){let delay=arguments.length>1&&void 0!==arguments[1]?arguments[1]:300,[debouncedValue,setDebouncedValue]=(0,react.useState)(value);return(0,react.useEffect)(()=>{let handler=window.setTimeout(()=>{setDebouncedValue(value)},delay);return()=>{clearTimeout(handler)}},[value,delay]),debouncedValue},hooks_useClickOutside=function useClickOutside(ref,handler){(0,react.useEffect)(()=>{let listener=e=>{!ref.current||ref.current.contains(e.target)||handler(e)};return document.addEventListener("click",listener),()=>{document.removeEventListener("click",listener)}},[ref,handler])},AutoComplete=props=>{let{fetchSuggestions,onSelect,value,renderOption,...restProps}=props,[inputValue,setInputValue]=(0,react.useState)(value),[suggestions,setSuggestions]=(0,react.useState)([]),[loading,setLoading]=(0,react.useState)(!1),[showDropdown,setShowDropdown]=(0,react.useState)(!1),[highlightIndex,setHighlightIndex]=(0,react.useState)(-1),triggerSearchRef=(0,react.useRef)(!1),componentRef=(0,react.useRef)(null),debouncedValue=hooks_useDebounce(inputValue,300);hooks_useClickOutside(componentRef,()=>{setShowDropdown(!1)}),(0,react.useEffect)(()=>{if(debouncedValue&&triggerSearchRef.current){setSuggestions([]);let results=fetchSuggestions(debouncedValue);results instanceof Promise?(setLoading(!0),results.then(data=>{setLoading(!1),setSuggestions(data),data.length>0&&setShowDropdown(!0)})):(setSuggestions(results),results.length>0&&setShowDropdown(!0))}else setShowDropdown(!1);setHighlightIndex(-1)},[debouncedValue,fetchSuggestions]);let highLight=index=>{index<0&&(index=0),index>=suggestions.length&&(index=suggestions.length-1),setHighlightIndex(index)},handleSelect=item=>{setInputValue(item.value),setShowDropdown(!1),onSelect&&onSelect(item),triggerSearchRef.current=!1},renderTemplate=item=>renderOption?renderOption(item):item.value;return(0,jsx_runtime.jsxs)("div",{className:"yinyin-auto-complete",ref:componentRef,children:[(0,jsx_runtime.jsx)(input1.A,{value:inputValue,onChange:e=>{setInputValue(e.target.value.trim()),triggerSearchRef.current=!0},onKeyDown:e=>{switch(e.key){case"Enter":suggestions[highlightIndex]&&handleSelect(suggestions[highlightIndex]);break;case"ArrowUp":highLight(highlightIndex-1);break;case"ArrowDown":highLight(highlightIndex+1);break;case"Escape":setShowDropdown(!1)}},...restProps}),(0,jsx_runtime.jsx)(Transition,{in:showDropdown||loading,animation:"zoom-in-top",timeout:300,onExited:()=>{setSuggestions([])},children:(0,jsx_runtime.jsxs)("ul",{className:"yinyin-suggestion-list",children:[loading&&(0,jsx_runtime.jsx)("div",{className:"suggestions-loading-icon",children:(0,jsx_runtime.jsx)(icon1.A,{icon:"spinner",spin:!0})}),suggestions.map((item,index)=>{let cnames=classnames_default()("suggestions-item",{"is-active":index===highlightIndex});return(0,jsx_runtime.jsx)("li",{className:cnames,onClick:()=>handleSelect(item),children:renderTemplate(item)},index)})]})})]})};try{AutoComplete.displayName="AutoComplete",AutoComplete.__docgenInfo={description:"",displayName:"AutoComplete",props:{fetchSuggestions:{defaultValue:null,description:"返回输入建议的方法，可以拿到当前的输入，然后返回同步的数组或者是异步的 Promise",name:"fetchSuggestions",required:!0,type:{name:"(str: string) => DataSourceObject[] | Promise<DataSourceObject[]>"}},onSelect:{defaultValue:null,description:"点击选中建议项时触发的回调",name:"onSelect",required:!1,type:{name:"((item: DataSourceObject) => void)"}},renderOption:{defaultValue:null,description:"支持自定义渲染下拉项，返回 ReactElement",name:"renderOption",required:!1,type:{name:"((item: DataSourceObject) => ReactElement<any, string | JSXElementConstructor<any>>)"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},size:{defaultValue:null,description:"设置input的大小，支持lg或sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},disabled:{defaultValue:null,description:"是否禁用Input",name:"disabled",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AutoComplete/autoComplete.tsx#AutoComplete"]={docgenInfo:AutoComplete.__docgenInfo,name:"AutoComplete",path:"src/components/AutoComplete/autoComplete.tsx#AutoComplete"})}catch(__react_docgen_typescript_loader_error){}try{autoComplete.displayName="autoComplete",autoComplete.__docgenInfo={description:"",displayName:"autoComplete",props:{fetchSuggestions:{defaultValue:null,description:"返回输入建议的方法，可以拿到当前的输入，然后返回同步的数组或者是异步的 Promise",name:"fetchSuggestions",required:!0,type:{name:"(str: string) => DataSourceObject[] | Promise<DataSourceObject[]>"}},onSelect:{defaultValue:null,description:"点击选中建议项时触发的回调",name:"onSelect",required:!1,type:{name:"((item: DataSourceObject) => void)"}},renderOption:{defaultValue:null,description:"支持自定义渲染下拉项，返回 ReactElement",name:"renderOption",required:!1,type:{name:"((item: DataSourceObject) => ReactElement<any, string | JSXElementConstructor<any>>)"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},size:{defaultValue:null,description:"设置input的大小，支持lg或sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},disabled:{defaultValue:null,description:"是否禁用Input",name:"disabled",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AutoComplete/autoComplete.tsx#autoComplete"]={docgenInfo:autoComplete.__docgenInfo,name:"autoComplete",path:"src/components/AutoComplete/autoComplete.tsx#autoComplete"})}catch(__react_docgen_typescript_loader_error){}let autoComplete_stories={title:"Component/AutoComplete",component:AutoComplete,decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(Story,{})})],argTypes:{},tags:["autodocs"],parameters:{layout:"centered"}},GetDataSync={render:args=>{let handleFetchSync=async query=>{try{let response=await fetch("https://api.github.com/search/users?q="+query);return(await response.json()).items.slice(0,10).map(item=>({value:item.login,...item}))}catch(error){throw console.error("Error fetching GitHub users:",error),error}};return(0,jsx_runtime.jsx)(AutoComplete,{...args,fetchSuggestions:handleFetchSync,placeholder:"输入Github用户名"})},parameters:{docs:{source:{code:'\nconst handleFetchSync = async (query: string) => {\n  try {\n    const response = await fetch(\n      "https://api.github.com/search/users?q=" + query\n    );\n    const data = await response.json();\n    const items = data.items;\n    return items\n      .slice(0, 10)\n      .map((item: any) => ({ value: item.login, ...item }));\n  } catch (error) {\n    console.error("Error fetching GitHub users:", error);\n    throw error;\n  }\n};\nreturn (\n  <AutoComplete\n    fetchSuggestions={handleFetchSync}\n    placeholder="输入Github用户名"\n  />\n);\n'}}}},GetDataWithTemplate={render:()=>{let lakersWithNumber=[{value:"bradley",number:11},{value:"pope",number:1},{value:"caruso",number:4},{value:"cook",number:2},{value:"cousins",number:15},{value:"james",number:23},{value:"AD",number:3},{value:"green",number:14},{value:"howard",number:39},{value:"kuzma",number:0}];return(0,jsx_runtime.jsx)(AutoComplete,{fetchSuggestions:query=>lakersWithNumber.filter(player=>player.value.includes(query)),renderOption:item=>(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsxs)("b",{children:["名字：",item.value]}),"   ",(0,jsx_runtime.jsxs)("span",{children:["球衣号码: ",item.number]})]}),placeholder:"输入球员名称"})}},BasedOnInput={args:{disabled:!0,icon:"check"}};GetDataSync.parameters={...GetDataSync.parameters,docs:{...GetDataSync.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const handleFetchSync = async (query: string) => {\n      try {\n        const response = await fetch("https://api.github.com/search/users?q=" + query);\n        const data = await response.json();\n        const items = data.items;\n        return items.slice(0, 10).map((item: any) => ({\n          value: item.login,\n          ...item\n        }));\n      } catch (error) {\n        console.error("Error fetching GitHub users:", error);\n        throw error;\n      }\n    };\n    return <AutoComplete {...args} fetchSuggestions={handleFetchSync} placeholder="输入Github用户名" />;\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: showCode\n      }\n    }\n  }\n}',...GetDataSync.parameters?.docs?.source}}},GetDataWithTemplate.parameters={...GetDataWithTemplate.parameters,docs:{...GetDataWithTemplate.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    interface customProps {\n      value: string;\n      number: number;\n    }\n    const lakersWithNumber = [{\n      value: "bradley",\n      number: 11\n    }, {\n      value: "pope",\n      number: 1\n    }, {\n      value: "caruso",\n      number: 4\n    }, {\n      value: "cook",\n      number: 2\n    }, {\n      value: "cousins",\n      number: 15\n    }, {\n      value: "james",\n      number: 23\n    }, {\n      value: "AD",\n      number: 3\n    }, {\n      value: "green",\n      number: 14\n    }, {\n      value: "howard",\n      number: 39\n    }, {\n      value: "kuzma",\n      number: 0\n    }];\n    const handleFetchTemplate = (query: string) => {\n      return lakersWithNumber.filter(player => player.value.includes(query));\n    };\n    const renderOption = (item: DataSourceType) => {\n      const itemWithNumber = (item as DataSourceType<customProps>);\n      return <React.Fragment>\n          <b>名字：{itemWithNumber.value}</b>&nbsp; &nbsp;\n          <span>球衣号码: {itemWithNumber.number}</span>\n        </React.Fragment>;\n    };\n    return <AutoComplete fetchSuggestions={handleFetchTemplate} renderOption={renderOption} placeholder="输入球员名称" />;\n  }\n}',...GetDataWithTemplate.parameters?.docs?.source}}},BasedOnInput.parameters={...BasedOnInput.parameters,docs:{...BasedOnInput.parameters?.docs,source:{originalSource:'{\n  args: {\n    disabled: true,\n    icon: "check"\n  }\n}',...BasedOnInput.parameters?.docs?.source}}};let __namedExportsOrder=["GetDataSync","GetDataWithTemplate","BasedOnInput"]},"./src/components/Icon/icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__}),__webpack_require__("../yinyintest/node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@fortawesome/fontawesome-svg-core/index.mjs"),_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../yinyintest/node_modules/react/jsx-runtime.js");_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_3__.Yv.add(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__.X7I);let Icon1=props=>{let{className,theme,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("yinyin-icon",className,{["icon-".concat(theme)]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.g,{className:classes,...restProps})},__WEBPACK_DEFAULT_EXPORT__=Icon1;try{Icon1.displayName="Icon",Icon1.__docgenInfo={description:"提供了一套常用的图标集合,基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n\n### 引用方法\n~~~js\nimport { Icon } from 'yinyin-ui-ts'\n~~~",displayName:"Icon",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"light"'},{value:'"dark"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Icon/icon.tsx#Icon"]={docgenInfo:Icon1.__docgenInfo,name:"Icon",path:"src/components/Icon/icon.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}try{icon.displayName="icon",icon.__docgenInfo={description:"提供了一套常用的图标集合,基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n\n### 引用方法\n~~~js\nimport { Icon } from 'yinyin-ui-ts'\n~~~",displayName:"icon",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"light"'},{value:'"dark"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Icon/icon.tsx#icon"]={docgenInfo:icon.__docgenInfo,name:"icon",path:"src/components/Icon/icon.tsx#icon"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Icon/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});let __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/Icon/icon.tsx").A;try{Icon.displayName="Icon",Icon.__docgenInfo={description:"提供了一套常用的图标集合,基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n\n### 引用方法\n~~~js\nimport { Icon } from 'yinyin-ui-ts'\n~~~",displayName:"Icon",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"light"'},{value:'"dark"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Icon/index.tsx#Icon"]={docgenInfo:Icon.__docgenInfo,name:"Icon",path:"src/components/Icon/index.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Input/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__}),__webpack_require__("../yinyintest/node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icon/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../yinyintest/node_modules/react/jsx-runtime.js");let Input=props=>{let value;let{disabled,size,icon:icon1,prepend,append,style,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("yinyin-input-wrapper",{["input-size-".concat(size)]:size,"is-disabled":disabled,"input-group":prepend||append,"input-group-append":!!append,"input-group-prepend":!!prepend});return"value"in props&&(delete restProps.defaultValue,restProps.value=null==(value=props.value)?"":value),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:classes,style:style,children:[prepend&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"yinyin-input-group-prepend",children:prepend}),icon1&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"icon-wrapper",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{icon:icon1,title:"title-".concat(icon1)})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input",{className:"yinyin-input-inner",disabled:disabled,...restProps}),append&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"yinyin-input-group-append",children:append})]})},__WEBPACK_DEFAULT_EXPORT__=Input;try{Input.displayName="Input",Input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\n\n### 引用方法\n~~~js\nimport { Input } from 'yinyin-ui-ts'\n~~~\n支持 HTMLInput 的所有基本属性",displayName:"Input",props:{disabled:{defaultValue:null,description:"是否禁用Input",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置input的大小，支持lg或sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/input.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"src/components/Input/input.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}try{input.displayName="input",input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\n\n### 引用方法\n~~~js\nimport { Input } from 'yinyin-ui-ts'\n~~~\n支持 HTMLInput 的所有基本属性",displayName:"input",props:{disabled:{defaultValue:null,description:"是否禁用Input",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置input的大小，支持lg或sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/input.tsx#input"]={docgenInfo:input.__docgenInfo,name:"input",path:"src/components/Input/input.tsx#input"})}catch(__react_docgen_typescript_loader_error){}}}]);